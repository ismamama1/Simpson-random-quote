{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/DV/Quests/react/simpsons-quote/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport QuoteCard from \"@components/QuoteCard.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showSimpsonsOnly, setShowSimpsonsOnly] = React.useState(false);\n  const [quoteList, setQuoteList] = React.useState([]);\n\n  function handleShowSimpsonsOnlyClick() {\n    setShowSimpsonsOnly(!showSimpsonsOnly);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleShowSimpsonsOnlyClick,\n      children: [\"Simpson family only: \", showSimpsonsOnly ? \"ON\" : \"OFF\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), quoteList.filter(quote => showSimpsonsOnly ? quote.character.includes(\"Simpson\") : quote).map((quote, index) => /*#__PURE__*/_jsxDEV(QuoteCard, { ...quote\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"74iBuwTgTIIWkUznKT/kiclLszs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/macbookpro/Desktop/DV/Quests/react/simpsons-quote/src/App.js"],"names":["React","QuoteCard","App","showSimpsonsOnly","setShowSimpsonsOnly","useState","quoteList","setQuoteList","handleShowSimpsonsOnlyClick","filter","quote","character","includes","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAAhD;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,KAAK,CAACK,QAAN,CAAe,EAAf,CAAlC;;AAEA,WAASG,2BAAT,GAAuC;AACrCJ,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACD;;AAED,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEK,2BAAjB;AAAA,0CACwBL,gBAAgB,GAAG,IAAH,GAAU,KADlD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGG,SAAS,CACPG,MADF,CACUC,KAAD,IACNP,gBAAgB,GAAGO,KAAK,CAACC,SAAN,CAAgBC,QAAhB,CAAyB,SAAzB,CAAH,GAAyCF,KAF5D,EAIEG,GAJF,CAIM,CAACH,KAAD,EAAQI,KAAR,kBACH,QAAC,SAAD,OAA2BJ;AAA3B,OAAgBI,KAAhB;AAAA;AAAA;AAAA;AAAA,YALH,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAtBQZ,G;;KAAAA,G;AAwBT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport QuoteCard from \"@components/QuoteCard.jsx\";\n\nfunction App() {\n  const [showSimpsonsOnly, setShowSimpsonsOnly] = React.useState(false);\n  const [quoteList, setQuoteList] = React.useState([]);\n\n  function handleShowSimpsonsOnlyClick() {\n    setShowSimpsonsOnly(!showSimpsonsOnly);\n  }\n\n  return (\n    <div>\n      <button onClick={handleShowSimpsonsOnlyClick}>\n        Simpson family only: {showSimpsonsOnly ? \"ON\" : \"OFF\"}\n      </button>\n      {quoteList\n        .filter((quote) =>\n          showSimpsonsOnly ? quote.character.includes(\"Simpson\") : quote\n        )\n        .map((quote, index) => (\n          <QuoteCard key={index} {...quote} />\n        ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}